{"ast":null,"code":"import { useReducer, useRef, useEffect } from 'react';\nconst api = {\n  uploadFile() {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, 550);\n    });\n  }\n\n};\n\nconst logUploadedFile = function (num) {\n  let color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'green';\n  const msg = `%cUploaded ${num} files.`;\n  const style = `color:${color};font-weight:bold;`;\n  console.log(msg, style);\n}; // Constants\n\n\nconst IDLE = 'IDLE';\nconst LOADED = 'LOADED';\nconst INIT = 'INIT';\nconst PENDING = 'PENDING';\nconst FILES_UPLOADED = 'FILES_UPLOADED';\nconst UPLOAD_ERROR = 'UPLOAD_ERROR';\nconst initialState = {\n  files: [],\n  fileNames: [],\n  pending: [],\n  next: null,\n  uploading: false,\n  uploaded: {},\n  uploadError: null,\n  status: IDLE\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'load':\n      return { ...state,\n        files: action.files,\n        fileNames: action.fileNames,\n        status: LOADED\n      };\n\n    case 'submit':\n      return { ...state,\n        uploading: true,\n        pending: state.files,\n        status: INIT\n      };\n\n    case 'next':\n      return { ...state,\n        next: action.next,\n        status: PENDING\n      };\n\n    case 'file-uploaded':\n      return { ...state,\n        next: null,\n        pending: action.pending,\n        uploaded: { ...state.uploaded,\n          [action.prev.id]: action.prev.file\n        }\n      };\n\n    case 'files-uploaded':\n      return { ...state,\n        uploading: false,\n        status: FILES_UPLOADED\n      };\n\n    case 'set-upload-error':\n      return { ...state,\n        uploadError: action.error,\n        status: UPLOAD_ERROR\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst useApp = _ref => {\n  let {\n    inputRef\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (state.files.length) {\n      dispatch({\n        type: 'submit'\n      });\n    } else {\n      window.alert(\"You don't have any files loaded.\");\n    }\n  };\n\n  const onChange = e => {\n    e.persist();\n\n    if (e.target.files.length) {\n      const arrFiles = Array.from(e.target.files);\n      const fileNames = [];\n      const files = arrFiles.reduce((acc, file) => {\n        if (!state.fileNames.includes(file.name)) {\n          fileNames.push(file.name);\n          const src = window.URL.createObjectURL(file);\n          acc.push({\n            file,\n            id: file.name,\n            src\n          });\n        }\n\n        return acc;\n      }, []);\n      const nextFiles = [...state.files, ...files];\n      dispatch({\n        type: 'load',\n        files: nextFiles,\n        fileNames\n      });\n    }\n  };\n\n  const triggerInput = e => {\n    e.persist();\n    inputRef.current.click();\n  };\n\n  const getFileUploaderProps = opts => ({\n    inputRef,\n    triggerInput,\n    onChange,\n    status: state.status,\n    ...opts\n  }); // Sets the next file when it detects that its ready to go\n\n\n  useEffect(() => {\n    if (state.pending.length && state.next == null) {\n      const next = state.pending[0];\n      dispatch({\n        type: 'next',\n        next\n      });\n    }\n  }, [state.next, state.pending]);\n  const countRef = useRef(0); // Processes the next pending thumbnail when ready\n\n  useEffect(() => {\n    if (state.pending.length && state.next) {\n      const {\n        next\n      } = state;\n      api.uploadFile(next).then(() => {\n        const prev = next;\n        logUploadedFile(++countRef.current);\n        const pending = state.pending.slice(1);\n        dispatch({\n          type: 'file-uploaded',\n          prev,\n          pending\n        });\n      }).catch(error => {\n        console.error(error);\n        dispatch({\n          type: 'set-upload-error',\n          error\n        });\n      });\n    }\n  }, [state]); // Ends the upload process\n\n  useEffect(() => {\n    if (!state.pending.length && state.uploading) {\n      dispatch({\n        type: 'files-uploaded'\n      });\n    }\n  }, [state.pending.length, state.uploading]);\n  return { ...state,\n    onSubmit,\n    onChange,\n    triggerInput,\n    getFileUploaderProps\n  };\n};\n\nexport default useApp;","map":{"version":3,"names":["useReducer","useRef","useEffect","api","uploadFile","Promise","resolve","setTimeout","logUploadedFile","num","color","msg","style","console","log","IDLE","LOADED","INIT","PENDING","FILES_UPLOADED","UPLOAD_ERROR","initialState","files","fileNames","pending","next","uploading","uploaded","uploadError","status","reducer","state","action","type","prev","id","file","error","useApp","inputRef","dispatch","onSubmit","e","preventDefault","length","window","alert","onChange","persist","target","arrFiles","Array","from","reduce","acc","includes","name","push","src","URL","createObjectURL","nextFiles","triggerInput","current","click","getFileUploaderProps","opts","countRef","then","slice","catch"],"sources":["C:/upload-app-master/src/useApp.js"],"sourcesContent":["import { useReducer, useRef, useEffect } from 'react'\n\nconst api = {\n  uploadFile() {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve()\n      }, 550)\n    })\n  },\n}\n\nconst logUploadedFile = (num, color = 'green') => {\n  const msg = `%cUploaded ${num} files.`\n  const style = `color:${color};font-weight:bold;`\n  console.log(msg, style)\n}\n\n// Constants\nconst IDLE = 'IDLE'\nconst LOADED = 'LOADED'\nconst INIT = 'INIT'\nconst PENDING = 'PENDING'\nconst FILES_UPLOADED = 'FILES_UPLOADED'\nconst UPLOAD_ERROR = 'UPLOAD_ERROR'\n\nconst initialState = {\n  files: [],\n  fileNames: [],\n  pending: [],\n  next: null,\n  uploading: false,\n  uploaded: {},\n  uploadError: null,\n  status: IDLE,\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'load':\n      return {\n        ...state,\n        files: action.files,\n        fileNames: action.fileNames,\n        status: LOADED,\n      }\n    case 'submit':\n      return { ...state, uploading: true, pending: state.files, status: INIT }\n    case 'next':\n      return {\n        ...state,\n        next: action.next,\n        status: PENDING,\n      }\n    case 'file-uploaded':\n      return {\n        ...state,\n        next: null,\n        pending: action.pending,\n        uploaded: {\n          ...state.uploaded,\n          [action.prev.id]: action.prev.file,\n        },\n      }\n    case 'files-uploaded':\n      return { ...state, uploading: false, status: FILES_UPLOADED }\n    case 'set-upload-error':\n      return { ...state, uploadError: action.error, status: UPLOAD_ERROR }\n    default:\n      return state\n  }\n}\n\nconst useApp = ({ inputRef }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (state.files.length) {\n      dispatch({ type: 'submit' })\n    } else {\n      window.alert(\"You don't have any files loaded.\")\n    }\n  }\n\n  const onChange = (e) => {\n    e.persist()\n    if (e.target.files.length) {\n      const arrFiles = Array.from(e.target.files)\n      const fileNames = []\n      const files = arrFiles.reduce((acc, file) => {\n        if (!state.fileNames.includes(file.name)) {\n          fileNames.push(file.name)\n          const src = window.URL.createObjectURL(file)\n          acc.push({ file, id: file.name, src })\n        }\n        return acc\n      }, [])\n      const nextFiles = [...state.files, ...files]\n      dispatch({ type: 'load', files: nextFiles, fileNames })\n    }\n  }\n\n  const triggerInput = (e) => {\n    e.persist()\n    inputRef.current.click()\n  }\n\n  const getFileUploaderProps = (opts) => ({\n    inputRef,\n    triggerInput,\n    onChange,\n    status: state.status,\n    ...opts,\n  })\n\n  // Sets the next file when it detects that its ready to go\n  useEffect(() => {\n    if (state.pending.length && state.next == null) {\n      const next = state.pending[0]\n      dispatch({ type: 'next', next })\n    }\n  }, [state.next, state.pending])\n\n  const countRef = useRef(0)\n\n  // Processes the next pending thumbnail when ready\n  useEffect(() => {\n    if (state.pending.length && state.next) {\n      const { next } = state\n      api\n        .uploadFile(next)\n        .then(() => {\n          const prev = next\n          logUploadedFile(++countRef.current)\n          const pending = state.pending.slice(1)\n          dispatch({ type: 'file-uploaded', prev, pending })\n        })\n        .catch((error) => {\n          console.error(error)\n          dispatch({ type: 'set-upload-error', error })\n        })\n    }\n  }, [state])\n\n  // Ends the upload process\n  useEffect(() => {\n    if (!state.pending.length && state.uploading) {\n      dispatch({ type: 'files-uploaded' })\n    }\n  }, [state.pending.length, state.uploading])\n\n  return {\n    ...state,\n    onSubmit,\n    onChange,\n    triggerInput,\n    getFileUploaderProps,\n  }\n}\n\nexport default useApp\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}