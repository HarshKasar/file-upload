{"ast":null,"code":"var _jsxFileName = \"C:\\\\upload-app-master\\\\src\\\\FileUploaderScreen.js\";\nimport React from 'react';\nimport cx from 'classnames';\nimport FileUploader from './FileUploader';\nimport fileUploadBg from './images/jade_input_bg.jpg';\nimport Spinner from './Spinner';\nimport artsCrafts from './images/art-arts-and-crafts-bright-1124884.jpg';\nimport adventureBeginsBg from './images/adventure-background-blur-891252.jpg';\nimport errorSrc from './images/121911.jpg';\n\nconst Init = () => React.createElement(\"div\", {\n  style: {\n    textAlign: 'center'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"Upload Files\"), React.createElement(\"small\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Click here to select your files\"));\n\nconst Loaded = ({\n  total,\n  getFileUploaderProps\n}) => React.createElement(\"div\", {\n  className: \"loaded\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, total, \" files loaded\"), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"What would you like to do?\"), React.createElement(\"div\", {\n  className: \"loaded-actions\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(FileUploader, Object.assign({}, getFileUploaderProps(), {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Upload More\")), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"Submit\"))));\n\nconst Pending = ({\n  files,\n  pending\n}) => {\n  const total = files.length;\n  const remaining = Math.abs(pending.length - total);\n  return React.createElement(\"div\", {\n    className: \"pending\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Uploading \", React.createElement(\"span\", {\n    className: \"text-attention\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, remaining), \" of\", ' ', React.createElement(\"span\", {\n    className: \"text-attention\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, total), \" files\"));\n};\n\nconst Success = () => React.createElement(\"div\", {\n  className: \"success-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, \"Congratulations!\"), React.createElement(\"small\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"You uploaded your files. Get some rest.\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), React.createElement(\"small\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, \"Look for the arrow!\")));\n\nconst Error = ({\n  uploadError\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  style: {\n    color: 'red'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"An error occurred!\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), uploadError && uploadError.message));\n\nconst FileUploaderScreen = ({\n  status,\n  files,\n  pending,\n  uploadError,\n  triggerInput,\n  getFileUploaderProps\n}) => {\n  let src;\n\n  switch (status) {\n    case 'IDLE':\n      src = fileUploadBg;\n      break;\n\n    case 'LOADED':\n    case 'PENDING':\n      src = artsCrafts;\n      break;\n\n    case 'FILES_UPLOADED':\n      src = adventureBeginsBg;\n      break;\n\n    case 'UPLOAD_ERROR':\n      src = errorSrc;\n      break;\n\n    default:\n      src = fileUploadBg;\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"uploader-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, status === 'IDLE' && React.createElement(Init, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), status === 'LOADED' && React.createElement(Loaded, {\n    triggerInput: triggerInput,\n    getFileUploaderProps: getFileUploaderProps,\n    total: files.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), status === 'PENDING' && React.createElement(Pending, {\n    files: files,\n    pending: pending,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), status === 'FILES_UPLOADED' && React.createElement(Success, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), status === 'UPLOAD_ERROR' && React.createElement(Error, {\n    uploadError: uploadError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      backgroundImage: \"url(\\\"\".concat(src, \"\\\")\")\n    },\n    className: cx('uploader-overlay', {\n      brightness50: status === 'IDLE',\n      brightness100: status === 'LOADED',\n      opacity05: status === 'PENDING',\n      grayscale: status === 'FILES_UPLOADED'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n};\n\nexport default FileUploaderScreen;","map":{"version":3,"sources":["C:\\upload-app-master\\src\\FileUploaderScreen.js"],"names":["React","cx","FileUploader","fileUploadBg","Spinner","artsCrafts","adventureBeginsBg","errorSrc","Init","textAlign","Loaded","total","getFileUploaderProps","Pending","files","pending","length","remaining","Math","abs","Success","Error","uploadError","color","message","FileUploaderScreen","status","triggerInput","src","backgroundImage","brightness50","brightness100","opacity05","grayscale"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,iDAAvB;AACA,OAAOC,iBAAP,MAA8B,+CAA9B;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,IAAI,GAAG,MACX;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,CADF;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACb;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,KAAL,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,EAGE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,YAAD,oBAAkBC,oBAAoB,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAJF,CAHF,CADF;;AAeA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACtC,QAAMJ,KAAK,GAAGG,KAAK,CAACE,MAApB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,CAASJ,OAAO,CAACC,MAAR,GAAiBL,KAA1B,CAAlB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,EAAE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCM,SAAlC,CADZ,SACmE,GADnE,EAEE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCN,KAAlC,CAFF,WADF,CADF;AAQD,CAXD;;AAaA,MAAMS,OAAO,GAAG,MACd;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CADF,CADF;;AAWA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAI,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGGD,WAAW,IAAIA,WAAW,CAACE,OAH9B,CADF,CADF;;AAUA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,MAD0B;AAE1BZ,EAAAA,KAF0B;AAG1BC,EAAAA,OAH0B;AAI1BO,EAAAA,WAJ0B;AAK1BK,EAAAA,YAL0B;AAM1Bf,EAAAA;AAN0B,CAAD,KAOrB;AACJ,MAAIgB,GAAJ;;AACA,UAAQF,MAAR;AACE,SAAK,MAAL;AACEE,MAAAA,GAAG,GAAGzB,YAAN;AACA;;AACF,SAAK,QAAL;AACA,SAAK,SAAL;AACEyB,MAAAA,GAAG,GAAGvB,UAAN;AACA;;AACF,SAAK,gBAAL;AACEuB,MAAAA,GAAG,GAAGtB,iBAAN;AACA;;AACF,SAAK,cAAL;AACEsB,MAAAA,GAAG,GAAGrB,QAAN;AACA;;AACF;AACEqB,MAAAA,GAAG,GAAGzB,YAAN;AACA;AAhBJ;;AAkBA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGuB,MAAM,KAAK,MAAX,IAAqB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,EAEGA,MAAM,KAAK,QAAX,IACC,oBAAC,MAAD;AACE,IAAA,YAAY,EAAEC,YADhB;AAEE,IAAA,oBAAoB,EAAEf,oBAFxB;AAGE,IAAA,KAAK,EAAEE,KAAK,CAACE,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EASGU,MAAM,KAAK,SAAX,IAAwB,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEZ,KAAhB;AAAuB,IAAA,OAAO,EAAEC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAT3B,EAUGW,MAAM,KAAK,gBAAX,IAA+B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVlC,EAWGA,MAAM,KAAK,cAAX,IAA6B,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAEJ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXhC,EAYE;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,kBAAUD,GAAV;AAAjB,KADT;AAEE,IAAA,SAAS,EAAE3B,EAAE,CAAC,kBAAD,EAAqB;AAChC6B,MAAAA,YAAY,EAAEJ,MAAM,KAAK,MADO;AAEhCK,MAAAA,aAAa,EAAEL,MAAM,KAAK,QAFM;AAGhCM,MAAAA,SAAS,EAAEN,MAAM,KAAK,SAHU;AAIhCO,MAAAA,SAAS,EAAEP,MAAM,KAAK;AAJU,KAArB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAwBD,CAnDD;;AAqDA,eAAeD,kBAAf","sourcesContent":["import React from 'react'\nimport cx from 'classnames'\nimport FileUploader from './FileUploader'\nimport fileUploadBg from './images/jade_input_bg.jpg'\nimport Spinner from './Spinner'\nimport artsCrafts from './images/art-arts-and-crafts-bright-1124884.jpg'\nimport adventureBeginsBg from './images/adventure-background-blur-891252.jpg'\nimport errorSrc from './images/121911.jpg'\n\nconst Init = () => (\n  <div style={{ textAlign: 'center' }}>\n    <h2>Upload Files</h2>\n    <small>Click here to select your files</small>\n  </div>\n)\n\nconst Loaded = ({ total, getFileUploaderProps }) => (\n  <div className='loaded'>\n    <h2>{total} files loaded</h2>\n    <div>What would you like to do?</div>\n    <div className='loaded-actions'>\n      <FileUploader {...getFileUploaderProps()}>\n        <button type='button'>Upload More</button>\n      </FileUploader>\n      <div>\n        <button type='submit'>Submit</button>\n      </div>\n    </div>\n  </div>\n)\n\nconst Pending = ({ files, pending }) => {\n  const total = files.length\n  const remaining = Math.abs(pending.length - total)\n  return (\n    <div className='pending'>\n      <Spinner sm>\n        Uploading <span className='text-attention'>{remaining}</span> of{' '}\n        <span className='text-attention'>{total}</span> files\n      </Spinner>\n    </div>\n  )\n}\n\nconst Success = () => (\n  <div className='success-container'>\n    <div>\n      <h2>Congratulations!</h2>\n      <small>You uploaded your files. Get some rest.</small>\n      <br />\n      <small>Look for the arrow!</small>\n    </div>\n  </div>\n)\n\nconst Error = ({ uploadError }) => (\n  <div>\n    <h2 style={{ color: 'red' }}>\n      An error occurred!\n      <br />\n      {uploadError && uploadError.message}\n    </h2>\n  </div>\n)\n\nconst FileUploaderScreen = ({\n  status,\n  files,\n  pending,\n  uploadError,\n  triggerInput,\n  getFileUploaderProps,\n}) => {\n  let src\n  switch (status) {\n    case 'IDLE':\n      src = fileUploadBg\n      break\n    case 'LOADED':\n    case 'PENDING':\n      src = artsCrafts\n      break\n    case 'FILES_UPLOADED':\n      src = adventureBeginsBg\n      break\n    case 'UPLOAD_ERROR':\n      src = errorSrc\n      break\n    default:\n      src = fileUploadBg\n      break\n  }\n  return (\n    <div className='uploader-input'>\n      {status === 'IDLE' && <Init />}\n      {status === 'LOADED' && (\n        <Loaded\n          triggerInput={triggerInput}\n          getFileUploaderProps={getFileUploaderProps}\n          total={files.length}\n        />\n      )}\n      {status === 'PENDING' && <Pending files={files} pending={pending} />}\n      {status === 'FILES_UPLOADED' && <Success />}\n      {status === 'UPLOAD_ERROR' && <Error uploadError={uploadError} />}\n      <div\n        style={{ backgroundImage: `url(\"${src}\")` }}\n        className={cx('uploader-overlay', {\n          brightness50: status === 'IDLE',\n          brightness100: status === 'LOADED',\n          opacity05: status === 'PENDING',\n          grayscale: status === 'FILES_UPLOADED',\n        })}\n      />\n    </div>\n  )\n}\n\nexport default FileUploaderScreen\n"]},"metadata":{},"sourceType":"module"}