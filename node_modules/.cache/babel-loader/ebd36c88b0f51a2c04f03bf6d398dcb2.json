{"ast":null,"code":"var _jsxFileName = \"C:\\\\upload-app-master\\\\src\\\\FileUploaderScreen.js\";\nimport React from 'react';\nimport cx from 'classnames';\nimport FileUploader from './FileUploader';\nimport fileUploadBg from './images/back.png';\nimport Spinner from './Spinner';\nimport artsCrafts from './images/back.png';\nimport adventureBeginsBg from './images/back.png';\nimport errorSrc from './images/back.png';\n\nconst Init = () => /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    textAlign: 'center'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n});\n\nconst Loaded = _ref => {\n  let {\n    total,\n    getFileUploaderProps\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loaded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loaded-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FileUploader, Object.assign({}, getFileUploaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Upload More\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Submit\"))));\n};\n\nconst Pending = _ref2 => {\n  let {\n    files,\n    pending\n  } = _ref2;\n  const total = files.length;\n  const remaining = Math.abs(pending.length - total);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Uploading \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-attention\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, remaining), \" of\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-attention\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, total), \" files\"));\n};\n\nconst Success = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"success-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n}, \"Congratulations!\"), /*#__PURE__*/React.createElement(\"small\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n}, \"You uploaded your files. Get some rest.\"), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"small\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}, \"Look for the arrow!\")));\n\nconst Error = _ref3 => {\n  let {\n    uploadError\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"An error occurred!\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), uploadError && uploadError.message));\n};\n\nconst FileUploaderScreen = _ref4 => {\n  let {\n    status,\n    files,\n    pending,\n    uploadError,\n    triggerInput,\n    getFileUploaderProps\n  } = _ref4;\n  let src;\n\n  switch (status) {\n    case 'IDLE':\n      src = fileUploadBg;\n      break;\n\n    case 'LOADED':\n    case 'PENDING':\n      src = artsCrafts;\n      break;\n\n    case 'FILES_UPLOADED':\n      src = adventureBeginsBg;\n      break;\n\n    case 'UPLOAD_ERROR':\n      src = errorSrc;\n      break;\n\n    default:\n      src = fileUploadBg;\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploader-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, status === 'IDLE' && /*#__PURE__*/React.createElement(Init, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }), status === 'LOADED' && /*#__PURE__*/React.createElement(Loaded, {\n    triggerInput: triggerInput,\n    getFileUploaderProps: getFileUploaderProps,\n    total: files.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), status === 'PENDING' && /*#__PURE__*/React.createElement(Pending, {\n    files: files,\n    pending: pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 32\n    }\n  }), status === 'FILES_UPLOADED' && /*#__PURE__*/React.createElement(Success, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 39\n    }\n  }), status === 'UPLOAD_ERROR' && /*#__PURE__*/React.createElement(Error, {\n    uploadError: uploadError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(\"${src}\")`\n    },\n    className: cx('uploader-overlay', {\n      brightness50: status === 'IDLE',\n      brightness100: status === 'LOADED',\n      opacity05: status === 'PENDING',\n      grayscale: status === 'FILES_UPLOADED'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FileUploaderScreen;","map":{"version":3,"names":["React","cx","FileUploader","fileUploadBg","Spinner","artsCrafts","adventureBeginsBg","errorSrc","Init","textAlign","Loaded","total","getFileUploaderProps","Pending","files","pending","length","remaining","Math","abs","Success","Error","uploadError","color","message","FileUploaderScreen","status","triggerInput","src","backgroundImage","brightness50","brightness100","opacity05","grayscale"],"sources":["C:/upload-app-master/src/FileUploaderScreen.js"],"sourcesContent":["import React from 'react'\nimport cx from 'classnames'\nimport FileUploader from './FileUploader'\nimport fileUploadBg from './images/back.png'\nimport Spinner from './Spinner'\nimport artsCrafts from './images/back.png'\nimport adventureBeginsBg from './images/back.png'\nimport errorSrc from './images/back.png'\n\nconst Init = () => (\n  <div style={{ textAlign: 'center' }}>\n   \n  </div>\n)\n\nconst Loaded = ({ total, getFileUploaderProps }) => (\n  <div className='loaded'>\n    <div className='loaded-actions'>\n      <FileUploader {...getFileUploaderProps()}>\n        <button type='button'>Upload More</button>\n      </FileUploader>\n      <div>\n        <button type='submit'>Submit</button>\n      </div>\n    </div>\n    \n    \n  </div>\n)\n\nconst Pending = ({ files, pending }) => {\n  const total = files.length\n  const remaining = Math.abs(pending.length - total)\n  return (\n    <div className='pending'>\n      <Spinner sm>\n        Uploading <span className='text-attention'>{remaining}</span> of{' '}\n        <span className='text-attention'>{total}</span> files\n      </Spinner>\n    </div>\n  )\n}\n\nconst Success = () => (\n  <div className='success-container'>\n    <div>\n      <h2>Congratulations!</h2>\n      <small>You uploaded your files. Get some rest.</small>\n      <br />\n      <small>Look for the arrow!</small>\n    </div>\n  </div>\n)\n\nconst Error = ({ uploadError }) => (\n  <div>\n    <h2 style={{ color: 'red' }}>\n      An error occurred!\n      <br />\n      {uploadError && uploadError.message}\n    </h2>\n  </div>\n)\n\nconst FileUploaderScreen = ({\n  status,\n  files,\n  pending,\n  uploadError,\n  triggerInput,\n  getFileUploaderProps,\n}) => {\n  let src\n  switch (status) {\n    case 'IDLE':\n      src = fileUploadBg\n      break\n    case 'LOADED':\n    case 'PENDING':\n      src = artsCrafts\n      break\n    case 'FILES_UPLOADED':\n      src = adventureBeginsBg\n      break\n    case 'UPLOAD_ERROR':\n      src = errorSrc\n      break\n    default:\n      src = fileUploadBg\n      break\n  }\n  return (\n    <div className='uploader-input'>\n      {status === 'IDLE' && <Init />}\n      {status === 'LOADED' && (\n        <Loaded\n          triggerInput={triggerInput}\n          getFileUploaderProps={getFileUploaderProps}\n          total={files.length}\n        />\n      )}\n      {status === 'PENDING' && <Pending files={files} pending={pending} />}\n      {status === 'FILES_UPLOADED' && <Success />}\n      {status === 'UPLOAD_ERROR' && <Error uploadError={uploadError} />}\n      <div\n        style={{ backgroundImage: `url(\"${src}\")` }}\n        className={cx('uploader-overlay', {\n          brightness50: status === 'IDLE',\n          brightness100: status === 'LOADED',\n          opacity05: status === 'PENDING',\n          grayscale: status === 'FILES_UPLOADED',\n        })}\n      />\n    </div>\n  )\n}\n\nexport default FileUploaderScreen\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,iBAAP,MAA8B,mBAA9B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,IAAI,GAAG,mBACX;EAAK,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAb,CAAZ;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EADF;;AAMA,MAAMC,MAAM,GAAG;EAAA,IAAC;IAAEC,KAAF;IAASC;EAAT,CAAD;EAAA,oBACb;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,gBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD,oBAAkBA,oBAAoB,EAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBACE;IAAQ,IAAI,EAAC,QAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,IAAI,EAAC,QAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADF,CAJF,CADF,CADa;AAAA,CAAf;;AAeA,MAAMC,OAAO,GAAG,SAAwB;EAAA,IAAvB;IAAEC,KAAF;IAASC;EAAT,CAAuB;EACtC,MAAMJ,KAAK,GAAGG,KAAK,CAACE,MAApB;EACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,CAASJ,OAAO,CAACC,MAAR,GAAiBL,KAA1B,CAAlB;EACA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAS,EAAE,MAAX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BACY;IAAM,SAAS,EAAC,gBAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAkCM,SAAlC,CADZ,SACmE,GADnE,eAEE;IAAM,SAAS,EAAC,gBAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAkCN,KAAlC,CAFF,WADF,CADF;AAQD,CAXD;;AAaA,MAAMS,OAAO,GAAG,mBACd;EAAK,SAAS,EAAC,mBAAf;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACE;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACE;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,sBADF,eAEE;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,6CAFF,eAGE;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAHF,eAIE;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,yBAJF,CADF,CADF;;AAWA,MAAMC,KAAK,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,oBACZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAT,CAAX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sCAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,EAGGD,WAAW,IAAIA,WAAW,CAACE,OAH9B,CADF,CADY;AAAA,CAAd;;AAUA,MAAMC,kBAAkB,GAAG,SAOrB;EAAA,IAPsB;IAC1BC,MAD0B;IAE1BZ,KAF0B;IAG1BC,OAH0B;IAI1BO,WAJ0B;IAK1BK,YAL0B;IAM1Bf;EAN0B,CAOtB;EACJ,IAAIgB,GAAJ;;EACA,QAAQF,MAAR;IACE,KAAK,MAAL;MACEE,GAAG,GAAGzB,YAAN;MACA;;IACF,KAAK,QAAL;IACA,KAAK,SAAL;MACEyB,GAAG,GAAGvB,UAAN;MACA;;IACF,KAAK,gBAAL;MACEuB,GAAG,GAAGtB,iBAAN;MACA;;IACF,KAAK,cAAL;MACEsB,GAAG,GAAGrB,QAAN;MACA;;IACF;MACEqB,GAAG,GAAGzB,YAAN;MACA;EAhBJ;;EAkBA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGuB,MAAM,KAAK,MAAX,iBAAqB,oBAAC,IAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADxB,EAEGA,MAAM,KAAK,QAAX,iBACC,oBAAC,MAAD;IACE,YAAY,EAAEC,YADhB;IAEE,oBAAoB,EAAEf,oBAFxB;IAGE,KAAK,EAAEE,KAAK,CAACE,MAHf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHJ,EASGU,MAAM,KAAK,SAAX,iBAAwB,oBAAC,OAAD;IAAS,KAAK,EAAEZ,KAAhB;IAAuB,OAAO,EAAEC,OAAhC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAT3B,EAUGW,MAAM,KAAK,gBAAX,iBAA+B,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVlC,EAWGA,MAAM,KAAK,cAAX,iBAA6B,oBAAC,KAAD;IAAO,WAAW,EAAEJ,WAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXhC,eAYE;IACE,KAAK,EAAE;MAAEO,eAAe,EAAG,QAAOD,GAAI;IAA/B,CADT;IAEE,SAAS,EAAE3B,EAAE,CAAC,kBAAD,EAAqB;MAChC6B,YAAY,EAAEJ,MAAM,KAAK,MADO;MAEhCK,aAAa,EAAEL,MAAM,KAAK,QAFM;MAGhCM,SAAS,EAAEN,MAAM,KAAK,SAHU;MAIhCO,SAAS,EAAEP,MAAM,KAAK;IAJU,CAArB,CAFf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZF,CADF;AAwBD,CAnDD;;AAqDA,eAAeD,kBAAf"},"metadata":{},"sourceType":"module"}